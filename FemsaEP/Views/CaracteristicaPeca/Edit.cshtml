    @model FemsaEP.Models.caracteristica_de_peca_SAP

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Views/Shared/_LayoutAjax.cshtml";
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formeditarcaracpeca" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)

        
<style>
    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file input[type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }
</style>
        
        <script>

            $('#checkado').change(function () {
                if ($(this).is(':checked')) {
                    $('#ZVALORPZA').attr("readonly", false);
                }
                else {
                    $('#ZVALORPZA').attr("readonly", true);
                }
            })


            $('#ZPROVEEDO').change(function (event) {
                               
                altura = $('#ZALTURA').val();
                largura = $('#ZANCHO').val();
                if (altura == "" || largura == "") {
                    alert("É necessário preencher os campos Altura e Largura.");
                    $("#ZPROVEEDO").val('');
                    return false;
                }
                id_fornecedor = $(this).val();
                if (id_fornecedor == "") {
                    return false;
                }
                $.ajax({
                    url: 'CaracteristicaPeca/checkm2',
                    type: 'POST',
                    dataType: 'json',
                    data: { id_fornecedor: id_fornecedor },
                })
                .done(function (data) {
                    m2 = altura * largura
                    total = m2 * data

                    $('#ZVALORPZA').val(total)

                })
                .fail(function () {
                    console.log("error");
                })
                .always(function () {
                    console.log("complete");
                });
            });


            jQuery(function ($) {
                $('#ZCODKITS').mask('00000');
                $('#ZANCHO').mask('00000');
                $('#ZALTURA').mask('00000');
                $('#ZDIAMETRO').mask('00000');
                $('#ZVALORPZA').mask('000000.00', { reverse: true });
            });

            var files = [];

            $("#inpuploadfoto").change(function (event) {

                $.each(event.target.files, function (index, file) {
                    var reader = new FileReader();
                    reader.onload = function (event) {
                        object = {};
                        //object.filename = file.name;
                        $(".fotobase64 ").val(event.target.result);
                        $(".imgpeca").attr('src', event.target.result)
                        $(".pull-right").removeClass("hidden")
                        //object.data = event.target.result;
                        //files.push(object);
                    };
                    reader.readAsDataURL(file);
                });
            });

            $(function () {
                // your code goes here
                $("#bteditarcaracpeca").click(function () {

                        $("#formeditarcaracpeca").submit();               

                });
            });
        </script>

            @Html.HiddenFor(model => model.MANDT)
            @Html.HiddenFor(model => model.ZCODPIEZA)
            @Html.HiddenFor(model => model.ZCODIPECA)
            @Html.HiddenFor(model => model.ZFORMCUS)
            @Html.HiddenFor(model => model.ZCOSTOM2)
    
            <div class="form-group">
                @Html.LabelFor(model => model.ZCODMARCA, "Código Marcas", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownList("ZCODMARCA", String.Empty)
                    @Html.ValidationMessageFor(model => model.ZCODMARCA)
                </div>
                @Html.LabelFor(model => model.ZCODEMBAL, "Código Embalagens", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownList("ZCODEMBAL", String.Empty)
                    @Html.ValidationMessageFor(model => model.ZCODEMBAL)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZCODALIME, "Código Alimento", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownList("ZCODALIME", String.Empty)
                    @Html.ValidationMessageFor(model => model.ZCODALIME)
                </div>
                @Html.LabelFor(model => model.ZDESACTIV, "Desativado", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.RadioButtonFor(model => model.ZDESACTIV, "X", new { @Id = "desativadosim" })
                    <label for="desativadosim">Sim</label>
                    @Html.RadioButtonFor(model => model.ZDESACTIV, "", new { @Id = "desativadonao" })
                    <label for="desativadonao">Não</label>
                    @Html.ValidationMessageFor(model => model.ZDESACTIV)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZPROVEEDO, "Código Fornecedor", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownList("ZPROVEEDO", String.Empty)
                    @Html.ValidationMessageFor(model => model.ZPROVEEDO)
                </div>
                @Html.LabelFor(model => model.ZCODKITS, "Código Kits", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.DropDownList("kits", String.Empty)
                    @Html.ValidationMessageFor(model => model.ZCODKITS)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ZALTURA, "Altura", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZALTURA, new { @class = "form-control", placeholder = "Altura" })
                    @Html.ValidationMessageFor(model => model.ZALTURA)
                </div>
                @Html.LabelFor(model => model.ZANCHO, "Largura", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZANCHO, new { @class = "form-control", placeholder = "Largura" })
                    @Html.ValidationMessageFor(model => model.ZANCHO)
                </div>
            </div>
        
            <div class="form-group">
                @Html.Label("Inserir Valor Manualmente", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.CheckBox("X", new { @Id = "checkado" })
                    <label for="desativadosim">Sim</label>
                </div>
                @Html.LabelFor(model => model.ZVALORPZA, "Valor Peça", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZVALORPZA, new { @class = "form-control", placeholder = "Valor Peça", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ZVALORPZA)
                </div>
            </div>
        
            <div class="form-group">
                @Html.LabelFor(model => model.ZDETALLE, "Detalhes", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZDETALLE, new { @class = "form-control", placeholder = "Detalhes", MaxLength = "100" })
                    @Html.ValidationMessageFor(model => model.ZDETALLE)
                </div>
                @Html.LabelFor(model => model.ZDIAMETRO, "Diâmetro", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZDIAMETRO, new { @class = "form-control", placeholder = "Diâmetro" })
                    @Html.ValidationMessageFor(model => model.ZDIAMETRO)
                </div>
            </div>    

            <div class="form-group">
                @Html.LabelFor(model => model.ZCODIMAGEN, "Código Imagem", new { @class = "col-md-2 control-label", MaxLength = "100" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ZCODIMAGEN, new { @class = "form-control", placeholder = "Código Imagem" })
                    @Html.ValidationMessageFor(model => model.ZCODIMAGEN)
                </div>
                @Html.LabelFor(model => model.foto_url, "Foto", new { @class = "col-md-2 control-label" })
                <div class="col-md-4">
                    <span class="btn btn-default btn-file">
                        Escolher Foto<input id="inpuploadfoto" type='file'>
                    </span>
                    @Html.TextBoxFor(model => model.foto_url, new { @class = "fotobase64 form-control", placeholder = "Foto", type = "hidden" })
                    @Html.ValidationMessageFor(model => model.foto_url)
                </div>
            </div>
    
        
    <div class="pull-right hidden">
        <div class="popup-gallery">
            <div class="pull-left mb-xs mr-xs thumbnail">
                <div class="img-responsive">
                    <img src="" class="imgpeca" alt="" width="100">
                </div>
            </div>
        </div>
    </div>
        
    }
